#!/bin/bash
# shellcheck disable=SC2029

#shellcheck source=/home/mendess/Projects/spell-book/spells/library.spell
. library

TMPDIR=${TMPDIR:-/tmp}
set -e
yellow() {
    echo -e "\e[32m$*\e[0m"
}

blue() {
    echo -e "\e[34m$*\e[0m"
}

error_selfish() {
    cat <<EOF
    Option $1 is selfish and can't be used with other non-selfish host options
EOF

    exit 1
}

help_message() {
    cat <<EOF
Wallpaper Manager

Usage
    $(basename "$0") [OPTIONS] wallpaper

Options
    -d
        Delete instead of adding
    -r
        Replace an existing one
    -w
        Add wallpaper to the weatherlight collection
    -T
        Add wallpaper only to the tolaria collection (selfish)
    -p
        Add wallpaper to the powerstone collection
    -P
        Add wallpaper only to the powerstone collection (selfish)
    -n name
        Specifiy the wallpaper's name
    -s --sync
        Download missing wallpapers
EOF

    exit 1
}

process_params() {
    [ -z "$name" ] && name="$(basename "$wall")"

    case "$mode" in
    add)
        case "$wall" in
        http*)
            wget --no-verbose "$wall" -O "$TMPDIR/$name"
            wall="$TMPDIR/$name"
            ;;
        esac
        if [[ "${host[0]}" = Powerstone ]]; then
            wall_dir=PhoneCollection
        else
            wall_dir=Wallpapers
        fi
        yellow "Sending $name to $wall_dir"
        if [[ "$replace" ]]; then
            if ssh mirrodin test '!' -e "Pictures/$wall_dir/$name"; then
                echo 'A wallpaper with that name doesn'\'' exist'
                exit 1
            fi
        else
            if ssh mirrodin test -e "Pictures/$wall_dir/$name"; then
                echo 'A wallpaper with that name doesn'\''t exist'
                exit 1
            fi
        fi
        scp "$wall" "mirrodin:Pictures/$wall_dir/$name"
        case "${host[0]}" in Powerstone | Tolaria) return 0 ;; esac
        for h in "${host[@]}"; do
            case "$h" in
            weatherlight)
                blue "Creating symlink"
                ssh mirrodin \
                    "ln -sfv ~/Pictures/Wallpapers/$name ~/Pictures/LaptopCollection"
                if [[ "$(hostname)" != "tolaria" ]]; then
                    cp -v "$wall" "$WALLPAPERS/$name"
                fi
                ;;
            powerstone)
                blue "Creating symlink"
                if ssh mirrodin "[ -e Pictures/PhoneCollection/$name ] && [ ! -h Pictures/PhoneCollection/$name ]"; then
                    echo -e "A \e[34mnon link\e[0m wallpaper with that name already exists"
                    exit 1
                fi
                ssh mirrodin "ln -sfv ~/Pictures/Wallpapers/$name ~/Pictures/PhoneCollection"
                ;;
            esac
        done
        ;;
    delete)
        if [ -z "$wall" ]; then
            wall="$(find "$WALLPAPERS" -type f -printf '%T@ %p\n' |
                sort -n |
                cut -d' ' -f2- |
                sxiv -i -g 1800x1000 -b -t -o)"

        fi
        for w in $wall; do
            ssh mirrodin \
                "find Pictures/ -type l,f -name '$(basename "$w")' | xargs rm -v" | sed "s/'/'mirrodin:/"

            [ "$(hostname)" = tolaria ] || [ -e "$w" ] && rm -v "$w"
        done
        ;;
    esac
}

mode=add
while [ "$#" -gt 0 ]; do
    case "$1" in
    -w)
        [ -n "$selfish" ] && error_selfish "$selfish"
        host+=(weatherlight)
        ;;
    -T)
        host=(Tolaria)
        selfish=-T
        ;;
    -p)
        [ -n "$selfish" ] && error_selfish "$selfish"
        host+=(powerstone)
        ;;
    -P)
        host=(Powerstone)
        selfish=-P
        ;;
    -d)
        mode=delete
        ;;
    -h)
        wall=""
        break
        ;;
    -n)
        shift
        name="$1"
        ;;
    -s | --sync)
        sync=1
        ;;
    -r | --replace)
        replace=1
        ;;
    -*)
        echo "Flag $1 not valid"
        help_message
        ;;
    *)
        wall="$1"
        ;;
    esac
    shift
done
if [ ${#host} -lt 1 ]; then
    host=("$(hostname)")
fi

if [ "$mode" != delete ] && [ -z "$wall" ]; then
    if [ -z "$sync" ]; then
        help_message
    else
        mode=sync
    fi
fi

process_params
if [ -n "$sync" ]; then
    endpoint="mendess.xyz"
    mkdir -p "$WALLPAPERS"
    cd "$WALLPAPERS" || exit 1
    curl --silent "$endpoint/walls" | grep '<a' | cut -d"'" -f4 | \
        while read -r f; do
            if [ ! -e "$(basename "$f")" ]; then
                echo -n "Downloading $endpoint$f ..."
                wget --quiet "http://$endpoint/$f"
                echo 'Done'
            fi
        done
    echo 'Synced'
fi
