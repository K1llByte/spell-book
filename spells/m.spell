#!/bin/bash
cd "$SPELLS"/spells || exit 1

#shellcheck source=/home/mendess/.local/bin/library
. library

current_song () {
    filename=$(echo '{ "command": ["get_property", "media-title"] }' \
            | socat - "$MPVSOCKET" \
            | jq --raw-output '.data')

    videoId="$(echo '{ "command": ["get_property", "filename"] }' \
                         | socat - "$MPVSOCKET" \
                         | jq --raw-output '.data')"

    chapter=$(echo '{ "command": ["get_property", "chapter-metadata"] }' \
            | socat - "$MPVSOCKET" \
            | jq '.data.title' -r)

     if [ -z "$filename" ] || [ "$filename" = "_" ] || [ "$filename" = "$videoId" ]
     then
         [ -z "$videoId" ] && exit 1
         filename=$(grep "$videoId" "$PLAYLIST" | awk -F '\t' '{print $1}')
     fi
     [ -n "$chapter" ] \
         && [ "$chapter" != "null" ] \
         && filename="Video:  $filename
Song:   $chapter"

    case $1 in
         -n|--notify)
             notify-send "Now Playing" "$filename"
             eval "$UPDATE_I3BLOCKS"
             ;;
         -i|--link)
             echo '{ "command": ["get_property", "filename"] }' \
                | socat - "$MPVSOCKET" \
                | jq --raw-output '.data'
             ;;
          *)
             echo "Now Playing"
             echo "$filename"
             ;;
    esac
}

add_cat () {
    current_song=$(current_song --link | tail -1 | sed 's/"//g')

    [ -z "$current_song" ] && exit 2

    while :
    do
        cat=$(echo | dmenu -p "Category name? (Esq to quit)")
        if [ -z "$cat" ]
        then
            break
        fi
        sed -i -E "/$current_song/ s|$|	$cat|" "$PLAYLIST"
    done
}

queue () {
    if [ "$#" -lt 1 ]
    then
        echo please provide a link
        return 1
    fi
    echo '{ "command": ["loadfile", "'"$1"'", "append"]}' | socat - "$MPVSOCKET"
    COUNT=$(echo '{ "command": ["get_property", "playlist-count"]}' \
        | socat - "$MPVSOCKET" \
        | jq --raw-output '.data')
    CURRENT=$(echo '{ "command": ["get_property", "playlist-pos"]}' \
        | socat - "$MPVSOCKET" \
        | jq --raw-output '.data')
    echo '{ "command": ["playlist-move", '$((COUNT - 1))', '$((CURRENT + 1))']}' \
        | socat - "$MPVSOCKET"
}

main () {
    case $1 in
        p|pause)
            echo 'cycle pause' | socat - "$MPVSOCKET"
            ;;
        add?song|new)
            case $2 in
                -r|--remote)
                    yes no | ssh mirrodin 'zsh -c "PATH=$PATH:~/.local/bin; . ~/.zprofile; ~/.local/bin/syncspellbook; ~/.local/bin/m add_song '"${*:3}"'"; ~/.local/bin/syncspellbook'
                    ;;
                *)
                    ./helpers/add_link.sh "${@:2}"
                    ;;
            esac
            ;;
        add?playlist)
            for l in $(youtube-dl --get-id "$2" | sed 's|^|https://youtu.be/|')
            do
                main add_song "$l" "${@:3}"
            done
            ;;
        cat)
            cut -f4- "$PLAYLIST" | tr '\t' '\n' | sort | uniq
            ;;
        c|current)
            current_song "${@:2}"
            ;;
        add-cat-to-current|new-cat)
            add_cat "${@:2}"
            ;;
        queue)
            queue "$2"
            ;;
        delete_song)
            ./helpers/del_link.sh "${@:2}"
            ;;
        k|vu)
            if [ -z "$2" ]; then
                echo 'add volume 10' | socat - "$MPVSOCKET"
            else
                echo "add volume $2" | socat - "$MPVSOCKET"
            fi
            ;;
        j|vd)
            if [ -z "$2" ]; then
                echo 'add volume -10' | socat - "$MPVSOCKET"
            else
                echo "add volume -$2" | socat - "$MPVSOCKET"
            fi
            ;;
        H|prev)
            echo 'add chapter -1' | socat - "$MPVSOCKET"
            eval "$UPDATE_I3BLOCKS"
            ;;
        L|next)
            echo 'add chapter 1' | socat - "$MPVSOCKET"
            eval "$UPDATE_I3BLOCKS"
            ;;
        h|prev-file)
            echo 'playlist-prev' | socat - "$MPVSOCKET"
            eval "$UPDATE_I3BLOCKS"
            ;;
        l|next-file)
            echo 'playlist-next' | socat - "$MPVSOCKET"
            eval "$UPDATE_I3BLOCKS"
            ;;
        J|back)
            if [ -z "$2" ]; then
                echo 'seek -10' | socat - "$MPVSOCKET"
            else
                echo "seek -$2" | socat - "$MPVSOCKET"
            fi
            ;;
        K|frwd)
            if [ -z "$2" ]; then
                echo 'seek 10' | socat - "$MPVSOCKET"
            else
                echo "seek $2" | socat - "$MPVSOCKET"
            fi
            ;;
        int|interactive)
            while :;
            do
                read -r -n 1 input
                [ "$input" = "q" ] && break
                [ "$input" = "c" ] && echo
                main "$input"
                [ "$input" = "c" ] || echo -en "\b"
            done
            ;;
        r|help)
            echo -en "\b"
            grep -Po ' \w\|\w[^)]+\)' "$0"
            ;;
        *)
            echo "¯\\_(ツ)_/¯"
    esac
}

main "$@"
