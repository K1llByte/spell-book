super + Return
  	termite

super + shift + Return
  	termFromHere

super + control + Return
  	termFromHere --title floating-terminal --class floating-terminal

super + d
  	dmenu_run

super + shift + d
  	~/Projects/spell-book/cantrips/menu.sh

super + F9
  	changeMeWall

super + F8
  	feh --bg-fill --no-fehbg ~/Pictures/Wallpapers/home.png

super + control + m
  	termite --class floating-terminal -e pacmixer

super + F2
  	firefox

super + shift + F2
  	firefox -private-window https://duckduckgo.com/

super + F3
  	discord

super + F4
  	steam

super + m
  	termite -e neomutt

super + shift + c
  	termite -e calcurse

@Print
  	scrot '%Y-%m-%d_$wx$h.png' -s -e 'xclip -sel clip -t image/png $f && rm $f'

shift + @Print
  	scrot -s -e 'scrot-rename $f'

super + @Print
  	scrot -s -e 'mv $f /tmp/ && sxiv -b -g $wx$h -p /tmp/$f && rm /tmp/$f'

super + control + s
  	termite --class floating-terminal --title floating-terminal -e 'syncspellbook --hold'

super + t
  	termite -e htop

super + c
  	termite --class floating-terminal --title floating-terminal -e 'bc -l'

super + x
  	termite --class floating-terminal -e 'bash -c "cal -3 -s && read -s -r -n 1"'

super + v
  	playClipboard

super + shift + v
  	sleep 0.5 && echo .p "https://youtu.be/$(m current -i)" | xclip -sel clip && xdotool key Ctrl+V && xdotool key Return && m next-file

super + shift + control + i
  	echo -n INACEITAVEL e INACREDITAVEL | xclip -sel clip && sleep 0.5 && xdotool key Ctrl+V

super + shift + t
 	echo -n 'ðŸ¤”' | xclip -sel clip

XF86AudioMute
    pactl 'set-sink-mute' 0 toggle

XF86AudioRaiseVolume
	pactl 'set-sink-volume' 0 '+5%'

XF86AudioLowerVolume
    pactl 'set-sink-volume' 0 '-5%'

XF86AudioMicMute
	pactl 'set-source-mute' 1 toggle

super + backslash
  	m pause

super + shift + bar
  	m quit

super + minus
  	m vd 2

super + plus
  	m vu 2

super + Next
  	m next

super + Prior
  	m prev

super + End
  	m next-file

super + Home
  	m prev-file

super + Up
  	m frwd 60

super + Down
  	m back 60

super + Right
  	m frwd 5

super + Left
  	m back 5

super + Insert
  	m current --notify

super + Delete
  	m add-cat-to-current

super + BackSpace
  	echo quit | socat - /tmp/mpvalarm

super + comma
  	show_full_bar

super + F6
  	echo $(( $(cat /sys/class/backlight/intel_backlight/brightness) + 10 )) > /sys/class/backlight/intel_backlight/brightness

super + F5
  	echo $(( $(cat /sys/class/backlight/intel_backlight/brightness) - 10 )) > /sys/class/backlight/intel_backlight/brightness

XF86MonBrightnessUp
	echo $(( $(cat /sys/class/backlight/intel_backlight/brightness) + 10 )) > /sys/class/backlight/intel_backlight/brightness

XF86MonBrightnessDown
	echo $(( $(cat /sys/class/backlight/intel_backlight/brightness) - 10 )) > /sys/class/backlight/intel_backlight/brightness

###### bspwm
super + shift + space
    bspc node -t \~floating

super + space
	if bspc query --nodes --node focused.floating; then \
		bspc node last.local.\!floating -f; \
	else \
		bspc node last.local.floating -f; \
	fi

super + f
    bspc node -t \~fullscreen

super + shift + q
    bspc node -c

super + shift + {h,j,k,l}
    d='{west:-10 0,south:0 10,north:0 -10,east:10 0}'; \
    if [ -n "$(bspc query -N -n focused.floating)" ]; then \
        bspc node --move $(echo "$d" | cut -d: -f2); \
    else \
        bspc node --swap $(echo "$d" | cut -d: -f1); \
    fi

super + {1-9,0}
	bspc desktop -f ^{1-9,10}
	# D={1-9,10}; \
	# bspc query --nodes --desktop >/dev/null ; \
	# empty=$?; \
	# cur="$(bspc query --desktops --desktop)"; \
	# echo "E: $empty C: $cur D: $D"; \
	# if ! bspc desktop -f ^$D; then \
	# 	echo "1st if"; \
	# 	bspc monitor -a $D; \
	# 	bspc desktop -f ^$D; \
	# fi; \
	# if [ $empty -eq 1 ]; then \
	# 	echo "2nd if"; \
	# 	bspc desktop $cur --remove; \
	# fi

super + shift + {1-9,0}
    bspc node -d '^{1-9,10}' --follow

super + control + {1-9,0}
    bspc node -d '^{1-9,10}' --follow

super + alt + {h,l}
	bspc node --to-monitor {prev,next} --follow

super + shift + F5
    bspc wm --restart ; notify-send -t 500 -u low 'reset done' -a bspwm

alt + Tab
	bspc desktop -f last.occupied

super + {_,shift +} Tab
	bspc desktop -f {next,prev}.local.occupied

super + e
	bspc desktop --layout next

super + {_,shift +} n
	bspc desktop --bubble {next,prev}

super + g
	bspc node -s biggest.local

super + shift + e
	bspc node $(bspc query --nodes --desktop | head -1) --equalize

super + r
	bspc node $(bspc query --nodes --desktop | head -1) --circulate forward

super + q ; {h,j,k,l}
	bspc node --presel-dir \~{west,south,north,east}

super + {_,shift +} apostrophe
	bspc node -t {\~pseudo_tiled,tiled}

super + i
	bspc node $(bspc query --nodes --desktop | head -1) -g hidden

super + shift + o
	echo -e 'i3lock -t -e --image=/home/mendess/Pictures/Wallpapers/home.png\nsystemctl suspend\nreboot\nshutdown now' | dmenu -nb '#6b0213' -sb '#a8031e' -l 4 | sh

super + shift + r
	bspc node @parent -R 90

super + control + {h,j,k,l}
	dir={(right left -10 0),(bottom top 0 +10),(bottom top 0 -10),(right left +10 0)}; \
    if ! i=$(bspc node --resize $\{dir[0]\} $\{dir[2]\} $\{dir[3]\} || bspc node --resize $\{dir[1]\} $\{dir[2]\} $\{dir[3]\}) ; then \
		notify-send 'Error bind' "$i"; fi


super + {h,j,k,l}
	dir={(west backward),(south backward),(north forward),(east forward)}; \
	bspc node --focus $\{dir[0]\}.!floating

#	|| bspc node $(bspc query --nodes --desktop | head -1) --circulate $\{dir[1]\}

super + shift + s
    bspc node -g sticky

super + shift + m
    if marked=$(bspc query -N -n .marked); then \
        bspc node --swap $marked ; \
        bspc node $marked -g 'marked=off' ; \
    else \
        bspc node -g marked ; \
    fi
